---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/appointments/create":
    post:
      summary: create appointments
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
  "/{user_id}/appointments/":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
  "/{user_id}/apointments/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show reservation
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
    patch:
      summary: update reservation
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
    put:
      summary: update reservation
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
    delete:
      summary: delete reservation
      tags:
      - api/appointments
      responses:
        '200':
          description: successful
  "/login":
    post:
      summary: login authentication
      tags:
      - api/authentication
      responses:
        '200':
          description: successful
  "/doctors/create":
    post:
      summary: Create a doctor
      tags:
      - api/doctors
      parameters: []
      responses:
        '201':
          description: doctor created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                image:
                  type: string
                description:
                  type: string
                speciality:
                  type: string
              required:
              - name
              - city
              - image
              - description
              - speciality
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                image:
                  type: string
                description:
                  type: string
                speciality:
                  type: string
              required:
              - name
              - city
              - image
              - description
              - speciality
  "/doctors":
    get:
      summary: list doctors
      tags:
      - api/doctors
      responses:
        '200':
          description: successful
  "/doctors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show doctor
      tags:
      - api/doctors
      responses:
        '200':
          description: successful
    patch:
      summary: update doctor
      tags:
      - api/doctors
      responses:
        '200':
          description: successful
    put:
      summary: update doctor
      tags:
      - api/doctors
      responses:
        '200':
          description: successful
    delete:
      summary: delete doctor
      tags:
      - api/doctors
      responses:
        '200':
          description: successful
  "/signup":
    post:
      summary: create user
      tags:
      - api/users
      responses:
        '200':
          description: successful
  "/users":
    get:
      summary: list users
      tags:
      - api/users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - api/users
      responses:
        '200':
          description: successful
  "/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - api/users
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - api/users
      responses:
        '200':
          description: successful
    put:
      summary: update user
      tags:
      - api/users
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      tags:
      - api/users
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
